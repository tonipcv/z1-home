generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DemoRequest {
  id         String   @id @default(cuid())
  name       String
  email      String
  whatsapp   String?
  speciality String?
  bestTime   String?
  status     String   @default("PENDING")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  phone      String?
  specialty  String?
}

model InsideSalesLead {
  id            Int      @id @default(autoincrement())
  name          String
  email         String
  whatsapp      String
  instagram     String
  area          String
  employees     String
  revenue       String
  useTechnology String
  status        String   @default("new")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Lead {
  id         String   @id @default(cuid())
  name       String
  whatsapp   String
  email      String
  segment    String?
  budget     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  profession String
}

model ProposalLead {
  id              Int      @id @default(autoincrement())
  name            String
  email           String
  whatsapp        String
  profession      String
  knowsTechnology String   @default("Não")
  revenue         String   @default("Não informado")
  status          String   @default("new")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("proposal_leads")
}

enum ScoreValue {
  Poor
  Basic
  Good
  Professional
  Excellent
}

enum Source {
  website
  email
  phone
  referral
  other
}

enum SubmissionStatus {
  pending
  contacted
  scheduled
  completed
  archived
}

model ScorecardSubmission {
  id              Int             @id @default(autoincrement())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  // Contact Information
  name            String         @db.VarChar(255)
  email           String         @db.VarChar(255)
  phone           String         @db.VarChar(50)
  clinicName      String         @db.VarChar(255)
  role            String         @db.VarChar(100)
  numberOfDoctors Int
  city            String         @db.VarChar(100)
  state           String         @db.VarChar(100)

  // Scorecard Ratings
  firstImpression ScoreValue
  patientJourney  ScoreValue
  followUp        ScoreValue
  reviews         ScoreValue
  branding        ScoreValue
  totalScore      Int

  // Tracking Information
  source          Source          @default(website)
  utmSource       String?         @db.VarChar(100)
  utmMedium       String?         @db.VarChar(100)
  utmCampaign     String?         @db.VarChar(100)
  ipAddress       String          @db.VarChar(100)
  userAgent       String          @db.Text
  status          SubmissionStatus @default(pending)
  notes           String?         @db.Text

  @@index([email])
  @@index([status])
  @@index([createdAt])
}

model AccessRequest {
  id             String   @id @default(cuid())
  firstName      String
  lastName       String
  email          String
  company        String
  jobTitle       String
  phoneNumber    String
  industry       String
  companySize    String
  useCase        String
  budget         String
  timeline       String
  additionalInfo String?
  status         String   @default("PENDING")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  CONTACTED
}
